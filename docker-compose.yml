version: '3'

services:
  frontend:
    container_name: front_jokerz
    env_file:
        "./front-jokerz/.env"
    build:
      context: ./front-jokerz
      dockerfile: Dockerfile-prod
    depends_on:
      - backend
    ports:
      - '80:80'
    networks:
      - mongo-compose-network
      
  backend:
    container_name: back_jokerz
    volumes:
      - ./back-jokerz:/node-app
      - /node-app/node_modules
    environment:
      NODE_ENV: development
    env_file:
        "./back-jokerz/.env"
    build:
      context: ./back-jokerz
      dockerfile: ./Dockerfile
    depends_on:
      - mongo
    ports:
      - '3333:3333'
    networks:
      - mongo-compose-network

  mongo:
    image: mongo
    restart: always
    container_name: MONGODB_MEDIUM
    ports:
      - '27017:27017'
    volumes:
      - mongodb_data_container:/data/db
    networks:
      - mongo-compose-network
      
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    networks:
      - mongo-compose-network

networks: 
  mongo-compose-network:
    driver: bridge
volumes:
  mongodb_data_container: