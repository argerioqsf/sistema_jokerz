version: '3'
services:
  app-prod:
      image: "frontjokerz"
      container_name: dockerized-react-app
      build:
        context: ./front-jokerz
        dockerfile: Dockerfile-prod
      ports:
        - 5000:80
      depends_on:
        - backend
      networks:
        - mongo-compose-network

  reverse-proxy:
    image: valian/docker-nginx-auto-ssl:1.0.0
    container_name: reverse-proxy
    restart: on-failure
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./.ssl-data:/etc/resty-auto-ssl
    environment:
      ALLOWED_DOMAINS: '(www|api).teamjokerz.com.br'
      SITES: 'www.teamjokerz.com.br=app-prod:80;api.teamjokerz.com.br=backend:80'
      FORCE_HTTPS: "true"
    depends_on:
      - app-prod
    networks:
      - mongo-compose-network
      
  backend:
    container_name: back_jokerz
    volumes:
      - ./back-jokerz:/node-app
      - /node-app/node_modules
    environment:
      NODE_ENV: development
    env_file:
        "./back-jokerz/.env"
    build:
      context: ./back-jokerz
      dockerfile: ./Dockerfile
    depends_on:
      - mongo
    ports:
      - '3333:3333'
    networks:
      - mongo-compose-network

  mongo:
    image: mongo
    restart: always
    container_name: MONGODB_MEDIUM
    ports:
      - '27017:27017'
    volumes:
      - mongodb_data_container:/data/db
    networks:
      - mongo-compose-network
      
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    networks:
      - mongo-compose-network

networks: 
  mongo-compose-network:
    driver: bridge
volumes:
  .ssl-data:
  mongodb_data_container: